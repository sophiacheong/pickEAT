body, html {
  font-family: 'Bebas Neue', cursive;
  margin: 0;
  width: 100%;
}

html {
  background: url(./huck4.jpeg);
  height: 100%;
  background-position: center;
  background-repeat: no-repeat;
  background-size: cover;
  /* background-color: whitesmoke; */
}

#header {
  display: flex;
  justify-content: center;
  font-family: 'Alfa Slab One', cursive;
  flex-flow: column nowrap;
  align-items: center;
  padding-bottom: 0.5em;
  border: double;
  margin: 0.1em;
  background: rgba(196, 205, 218, 0.8);
}

h1 {
  font-size: 2.7em;
  margin: 0.3% 0%;
}

h5 {
  margin: 0%;
  font-family: 'Cookie', cursive;
  font-size: 1.7em;
  color: ghostwhite;
}

form {
  display: flex;
  justify-content: center;
  flex-flow: row nowrap;
}

.formFields {
  display: inline-flex;
  justify-content: center;
  margin: 1em;
}

.formFields1 {
  display: flex;
  flex: 0.2;
  justify-content: center;
  margin: 1em;
  width: 20%;
}

#error {
  color: rgba(150, 40, 27, 1);
  display: flex;
  justify-content: center;
  padding: 2%;
  border-bottom: 1px solid;
  font-size: 40px;
  font-weight: bold;
  font-family: 'Bebas Neue', cursive;
}

.err {
  color: rgba(207, 0, 15, 1);
  margin: 1em;
  display: flex;
  justify-content: center;
  font-size: 23px;
  font-family: 'Bebas Neue', cursive;
}

.ReactModal__Overlay {
  opacity: 0;
  transform: translateY(-100px);
  transition: all 500ms ease-in-out;
}

.ReactModal__Overlay--after-open{
  opacity: 1;
  transform: translateX(0px);
}

.ReactModal__Overlay--before-close{
  opacity: 0;
  transform: translateX(-100px);
}

.modal_buttons {
  display: flex;
  justify-content: center;
  align-items: center;
}

#mainPlaces {
  display: flex;
  flex-flow: column nowrap;
}

#placesModal {
  display: flex;
  flex-flow: row nowrap;
  align-items: baseline;
}

#listModal {
  display: table;
}

.placesList {
  display: table-cell;
  flex-flow: column wrap;
  padding: 0.5em;
  width: 50%;
}

.leftList {
  text-align: right;
}

#mobileForm {
  padding: 0.3em;
  border: double;
  margin: 0.1em;
  background: rgba(245, 245, 245, 0.85);
}

.mobileFields {
  display: flex;
  justify-content: space-evenly;
  flex-flow: row nowrap;
  align-content: center;
  width: 100%;
}

.mobileFields-Zoom {
  zoom: 1.1;
}

#reset {
  display: flex;
  justify-content: center;
}

@media only screen and (max-width: 980px) {
  html {
    /* background: #c4cdda; */
    background: url(./Springtime-Beignets-Berries_EXPS_THAM17_199933_C11_10_1b.jpeg);
    height: 100%;
    background-position: center;
    background-repeat: no-repeat;
    background-size: cover;
  }
  #header, h1, h5 {
    zoom: 1.2;
    border: none;
    color: black;
    background: none;
  }
  body {
    zoom: 2.19;
  }
  form {
    display: flex;
    flex-flow: column wrap;
    align-content: center;
    margin-top: 1.5%;
  }
  .formFields {
    display: flex;
    align-self: center;
    margin: 1%;
    width: 90%;
  }
  #listModal {
    display: table;
    white-space: nowrap;
  }
  .placesList {
    display: table-cell;
    flex-flow: column wrap;
    padding: 0.5em;
  }
}

:root {
  --wheel-font: 'Lato', 'Quicksand', sans-serif;
  --wheel-size: 400px;
  --wheel-slice-spacing: 50px;
  --wheel-border-size: 5px;
  --wheel-color: #233654;
  --neutral-color: whitesmoke;
  --PI: 3.14159265358979;
  --nb-item: 0;
  --item-nb: 0;
  --selected-item: 0;
  --nb-turn: 5;
  --spinning-duration: 4s;
  --reset-duration: 0.25s;
}

/* Conteneur de la roue = cercle rose extérieur */
.wheel-container {
  display: block;
  position: relative;
  box-sizing: content-box;
  width: calc(var(--wheel-size) + 2 * var(--wheel-border-size));
  height: calc(var(--wheel-size) + 2 * var(--wheel-border-size));
  padding: 3px;
  margin: auto;
  background-color: var(--neutral-color);
  border: solid #233654 3px;
  border-radius: 50%;
  user-select: none;
}

/* Triangle de sélection = 1 rose +  1 blanc */
.wheel-container::before,
.wheel-container::after {
  content: '';
  display: block;
  position: absolute;
  height: 0;
  width: 0;
  top: 50%;
  transform: translateY(-50%);
  border: solid transparent 20px;
  border-left-width: 0;
}

.wheel-container::before {
  right: 0px;
  border-right-color: var(--wheel-color);
}

.wheel-container::after {
  right: -5px;
  border-right-color: var(--neutral-color);
}

/* Roue */
.wheel {
  display: block;
  position: relative;
  box-sizing: content-box;
  margin: auto;
  width: var(--wheel-size);
  height: var(--wheel-size);
  overflow: hidden;
  border-radius: 50%;
  border: solid #233654 var(--wheel-border-size);
  background-color: #c4cdda;
  transition: transform var(--reset-duration);
  transform: rotate(0deg);
  cursor: pointer;
}

.wheel.spinning {
  transition: transform var(--spinning-duration);
  transform: rotate(calc(var(--nb-turn) * 360deg + (-360deg * var(--selected-item) / var(--nb-item, 1))));
}

/* Centre de la roue = rond blanc au centre */
.wheel::after {
  display: block;
  position: absolute;
  content: '';
  background-color: var(--neutral-color);
  width: 25px;
  height: 25px;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  border-radius: 50%;
}

/* Element sur la roue */
.wheel-item {
  display: block;
  position: absolute;
  box-sizing: border-box;

  /* position de l'item */
  top: 50%;
  left: 50%;
  width: 50%;
  transform-origin: center left;
  transform: translateY(-50%) rotate(calc(var(--item-nb) * (360deg / var(--nb-item, 1))));

  /* texte */
  color: black;
  text-align: right;
  padding: 0 25px 0 50px;
  font-family: var(--wheel-font);
  font-weight: 550;
}

/* Background de l'élément = triangle rose plus clair */
.wheel-item:before {
  content: ' ';
  display: block;
  position: absolute;
  box-sizing: border-box;
  width: 0;
  height: 0;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  padding-left: 0px;
  opacity: 0.25;

  /*
    Largeur du triangle
    Je ne sais pas pourquoi j'ai besoin d'ajouter
      " + var(--wheel-size) / 2 " dans slice-max-width  ==> donne 2.PI.R + R
    mais globalement ca marche a peu près bien
    TODO: A étudier
  */
  --slice-max-width: calc(var(--PI) * var(--wheel-size) + var(--wheel-size) / 2);
  --slice-width: calc((var(--slice-max-width) / var(--nb-item)) - var(--wheel-slice-spacing));
  border: solid transparent calc(var(--slice-width) / 2);
  border-left: solid transparent 0;
  /* profondeur du triangle = du centre de la roue à la bordure = 300px / 2 */
  border-right: solid var(--neutral-color) calc(var(--wheel-size) / 2);
}
